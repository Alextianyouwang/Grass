#pragma kernel GlobalWind

RWStructuredBuffer<float> _WindBuffer;
uint _MaxCount;
float _TileSize;
float _TileDimension;
float _CornerX;
float _CornerY;
float _Time;
float _DirX;
float _DirY;
float _Frequency;
float _Speed;
float _Direction;
#include "../INCLUDE/HL_Noise.hlsl"
#include "../INCLUDE/HL_GraphicsHelper.hlsl"
[numthreads(1024, 1, 1)]
void GlobalWind(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _MaxCount)
        return;
    
    int coordX = id.x / _TileDimension;
    int coordY = id.x % _TileDimension;
    float2 posXZ = float2(coordX * _TileSize + _CornerX, coordY * _TileSize + _CornerY);
    posXZ = Rotate2D(posXZ, -_Direction);
    posXZ *= _Frequency;
    posXZ.x -= _Time * _Frequency * _Speed;

    float noise = perlinNoise(posXZ , float2(12.9898, 78.233));
    _WindBuffer[id.x] =noise ;

}